#!/usr/bin/python3

#clock that rings chimes every i5 minutes
#from schedule defined/uploadable

#also daemon that speaks alerts sent from pi-2 send over port
#Feb 9, 2020 Starlight, making maple syrup while Maura is in California
#taking Holotrophic Breath Works course

import time                    # This clock works with RasPiO InsPiRing Circle
from time import sleep         # http://rasp.io/inspiring
#from datetime import datetime
import datetime
import threading
import socket
import pdb
import sys
import os
import socket

Port = 3333
#Host = "127.0.0.1"
Host = "0.0.0.0"
full_data = ""

def setup_server():
	#mySocket.bind((Host,Port))
	#mySocket.listen()
	print('setting up server')

 
def get_data():		#server awaiting connection to select what to play
	global full_data
	#try:
	with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as mySocket:
		mySocket.bind((Host,Port))
		mySocket.listen()
		print('Waiting for connection')
		full_data = ""
		conn, addr = mySocket.accept()
		print ("Connection from: " + str(addr))
		with conn:
			data = conn.recv(128).decode()
			#if not data:
			#if data[0] == '\n':
			while True:
				full_data += data
				print('get_data: full_data: ',full_data)
				if '\n' in full_data:
					#pdb.set_trace()
					print("get_data: closing connection: nl detected full_data: ",full_data)
					conn.close()
					#return(full_data)
					break
			print ("get_data: from connected  user: full_data: " + str(full_data))
		#except:
			#print('Unable to get data')
			#sleep(2)
			#return(-1)

def play_warning(file_num):
	print('playing file_num',file_num)
	if file_num < 1 or file_num > 100:
		print('play_warning: file_num is out of range  ',file_num)
	else:
		os.system("aplay /home/pi/sounds/speech/front_door_open_it.wav")
	return(0)


def main():
	global full_data
	while True:
		print('main: loop: full_data: ',full_data)
		#full_data = get_data()
		get_data()
		print('main: after get_data() full_data: ',full_data)
		rtn = int(full_data)
		if rtn > 0:
			play_rtn = play_warning(1)
			#pdb.set_trace()	
			time.sleep(5)
		if rtn < 0:
			print('main: rtn = ',rtn)
			sleep(2)

main()
